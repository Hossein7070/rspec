{"version":3,"sources":["App.style.js","utils/useFetch.js","RulePage.js","utils/useRuleCoverage.js","SearchPage.style.js","utils/routing.js","SearchHit.js","SearchPage.js","utils/useSearch.js","TopBar.style.js","TopBar.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","root","textAlign","backgroundColor","appBarSpacer","mixins","toolbar","useFetch","url","options","parseJSON","React","useState","response","setResponse","error","setError","isLoading","setIsLoading","useEffect","a","fetch","res","content","json","text","fetchData","useStyles","ruleBar","borderBottom","ruleid","marginTop","spacing","marginBottom","title","coverage","description","tabRoot","justifyContent","tabScroller","flexGrow","RulePage","props","match","params","language","history","useHistory","metadataJSONString","classes","metadataUrl","process","editOnGithubUrl","descHTML","descError","descIsLoading","metadataJSON","metadataError","metadataIsLoading","ruleCoverage","coveredRules","coveredRulesError","coveredRulesIsLoading","languageToSonarpedia","ruleKeys","mapper","result","forEach","sonarpediaKey","ruleKey","push","length","useRuleCoverage","languagesTabs","all_languages","sort","map","lang","Tab","label","value","JSON","stringify","allKeys","key","version","dangerouslySetInnerHTML","__html","href","className","Container","Typography","variant","Tabs","onChange","event","indicatorColor","textColor","centered","scrollButtons","scroller","maxWidth","Box","searchHitBox","searchBar","paddingBottom","searchResults","resultsCount","useLocationSearchState","name","defaultValue","paramToState","stateToParam","toString","state","setState","location","useLocation","setSearchParam","search","skipURI","URLSearchParams","set","pathname","replace","has","get","searchHit","marginRight","SearchHit","languages","data","Chip","color","titles","split","component","gutterBottom","Link","RouterLink","to","id","Card","CardContent","SearchPage","query","setQuery","ruleType","setRuleType","allRuleTypes","ruleTags","setRuleTags","parseInt","pageNumber","setPageNumber","searchParams","Object","entries","useLocationSearch","setLocationSearch","pageSize","indexDataUrl","storeDataUrl","indexData","indexDataError","indexDataIsLoading","storeData","storeDataError","storeDataIsLoading","index","setIndex","results","setResults","numberOfHits","setNumberOfHits","resultsAreloading","setResultsAreLoading","console","log","lunr","load","hits","q","term","toLowerCase","fields","presence","REQUIRED","usePipeline","ruleTag","token","exception","message","pageResults","slice","ref","useSearch","resultsAreLoading","totalPages","Math","ceil","resultsDisplay","paramSetters","types","tags","handleUpdate","field","uriSearch","page","target","Grid","container","item","xs","TextField","placeholder","fullWidth","margin","InputLabelProps","shrink","helperText","select","MenuItem","keys","SelectProps","multiple","renderValue","selected","join","Pagination","count","siblingCount","menuButton","TopBar","AppBar","position","Toolbar","IconButton","edge","aria-label","App","CssBaseline","basename","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f2f5933d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    textAlign: 'left',\n    backgroundColor: 'white',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n}));","import React from 'react';\n\nexport function useFetch(url, options=null, parseJSON=true) {\n  const [response, setResponse] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url, options);\n        let content = null;\n        if (parseJSON) {\n          content = await res.json();\n        } else {\n          content = await res.text();\n        }\n        setResponse(content);\n        setIsLoading(false)\n      } catch (exception) {\n        setError(exception);\n      }\n    };\n    fetchData();\n  }, [url, options, parseJSON]);\n\n  return [ response, error, isLoading ];\n}","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { useRuleCoverage } from './utils/useRuleCoverage';\nimport { useFetch } from './utils/useFetch';\n\n\nconst useStyles = makeStyles((theme) => ({\n  ruleBar: {\n    borderBottom: '1px solid lightgrey',\n  },\n  ruleid: {\n    textAlign: 'center',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  title: {\n    textAlign: 'justify',\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  coverage: {\n    marginBottom: theme.spacing(3),\n  },\n  description: {\n    textAlign: 'justify',\n    // marginBottom: theme.spacing(3),\n  },\n\n  // style used to center the tabs when there too few of them to fill the container\n  tabRoot: {\n    justifyContent: \"center\"\n  },\n  tabScroller: {\n    flexGrow: \"0\"\n  }\n}));\n\n\nexport function RulePage(props) {\n  const ruleid = props.match.params.ruleid;\n  const language = props.match.params.language;\n\n  const history = useHistory();\n  function handleLanguageChange(event, lang) {\n    history.push(`/${ruleid}/${lang}`);\n  }\n\n  const classes = useStyles();\n\n  let descUrl = process.env.PUBLIC_URL + '/rules/' + ruleid + \"/\" + language + \"-description.html\";\n  let metadataUrl = process.env.PUBLIC_URL + '/rules/' + ruleid + \"/\" + language + \"-metadata.json\";\n  let editOnGithubUrl = 'https://github.com/SonarSource/rspec/tree/master/rules/' + ruleid + '/' + language;\n\n  let [descHTML, descError, descIsLoading] = useFetch(descUrl, null, false);\n  let [metadataJSON, metadataError, metadataIsLoading] = useFetch(metadataUrl, null, true);\n\n  const ruleCoverage = useRuleCoverage();\n  let coverage = \"Loading...\";\n\n  let title = \"Loading...\"\n  let metadataJSONString;\n  let languagesTabs = null;\n  if (!metadataIsLoading && !metadataError) {\n    title = metadataJSON.title\n    metadataJSON.all_languages.sort()\n    languagesTabs = metadataJSON.all_languages.map(lang => <Tab label={lang} value={lang}/>)\n    metadataJSONString = JSON.stringify(metadataJSON, null, 2);\n\n    coverage = ruleCoverage(language, metadataJSON.allKeys, (key, version) => {\n      return (\n      <li>{key}: {version}</li>\n      )\n    });\n  }\n\n  let description = <div>Loading...</div>;\n  if (!descIsLoading && !descError) {\n    description = <div>\n      <div dangerouslySetInnerHTML={{__html: descHTML}}/>\n      <hr />\n      <a href={editOnGithubUrl}>Edit on Github</a><br/>\n      <hr />\n      <pre>{metadataJSONString}</pre>\n    </div>;\n  }\n\n\n  return (\n    <div>\n    <div className={classes.ruleBar}>\n      <Container>\n      <Typography variant=\"h2\" classes={{root: classes.ruleid}}>{ruleid}</Typography>\n      <Tabs\n          value={language}\n          onChange={handleLanguageChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          centered\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          classes={{ root: classes.tabRoot, scroller: classes.tabScroller }}\n      >\n        {languagesTabs}\n      </Tabs>\n      </Container>\n    </div>\n  \n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" classes={{root: classes.title}}>{title}</Typography>\n      <Box classes={{root: classes.coverage}}>\n        <Typography variant=\"h4\" >Covered Since</Typography>\n        <ul>\n        {coverage}\n        </ul>\n      </Box>\n      <Box classes={{root: classes.description}}>\n        <Typography variant=\"h4\">Description</Typography>\n        <Typography className={classes.description}>\n          {description}\n        </Typography>\n      </Box>\n    </Container>\n    </div>\n    \n  );\n}\n","import { useFetch } from './useFetch';\n\nexport function useRuleCoverage() {\n\n  const coveredRulesUrl = `${process.env.PUBLIC_URL}/covered_rules.json`;\n  const [coveredRules, coveredRulesError, coveredRulesIsLoading] = useFetch(coveredRulesUrl);\n  const languageToSonarpedia = {\n    'abap': ['ABAP'],\n    'apex': ['APEX'],\n    'cfamily': ['CPP', 'C', 'OBJC'],\n    'cobol': ['COBOL'],\n    'csharp': ['CSH'],\n    'vbnet': ['VBNET'],\n    'css': ['CSS'],\n    'flex': ['FLEX'],\n    'kotlin': ['KOTLIN'],\n    'scala': ['SCALA'],\n    'ruby': ['RUBY'],\n    'go': ['GO'],\n    'java': ['JAVA'],\n    'javascript': ['JAVASCRIPT', 'JS', 'TYPESCRIPT'],\n    'php': ['PHP'],\n    'pli': ['PLI'],\n    'plsql': ['PLSQL'],\n    'python': ['PY'],\n    'rpg': ['RPG'],\n    'swift': ['SWIFT'],\n    'tsql': ['TSQL'],\n    'vb6': ['VB'],\n    'WEB': ['WEB'],\n    'xml': ['XML']\n  };\n  function ruleCoverage(language, ruleKeys, mapper) {\n    if (coveredRulesError) {\n      return 'Failed Loading';\n    }\n    if (coveredRulesIsLoading) {\n      return 'Loading';\n    }\n    // return \"FIXME\"\n    const result = [];\n    // const keys = coveredRules.keys;\n    languageToSonarpedia[language].forEach(sonarpediaKey => {\n      ruleKeys.forEach(ruleKey => {\n        if (ruleKey in coveredRules[sonarpediaKey]) {\n          result.push(mapper(sonarpediaKey, coveredRules[sonarpediaKey][ruleKey]))\n        }\n      });\n    });\n    if (result.length > 0) {\n      return result;\n    } else {\n      return 'Not Covered';\n    }\n  }\n\n  return ruleCoverage;\n}","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(1),\n  },\n  searchHitBox: {\n    marginBottom: theme.spacing(1),\n  },\n  searchBar: {\n    // backgroundColor: 'white'\n    borderBottom: '1px solid lightgrey',\n    paddingBottom: theme.spacing(2),\n  },\n  searchResults: {\n    marginTop: theme.spacing(3),\n  },\n  resultsCount: {\n    marginBottom: theme.spacing(2),\n  }\n}));\n","import React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\n\nexport function useLocationSearch() {\n  const location = useLocation();\n  const history = useHistory();\n\n  function setLocationSearch(searchParams, push=true) {\n    const search = new URLSearchParams(location.search);\n\n    for (const [key, value] of Object.entries(searchParams)) {\n      search.set(key, value);\n    }\n    \n    if (push) {\n      history.push(`${location.pathname}?${search.toString()}`);\n    } else {\n      history.replace(`${location.pathname}?${search.toString()}`);\n    }\n  }\n\n  return [new URLSearchParams(location.search), setLocationSearch];\n}\n\nexport function useLocationSearchState(name, defaultValue, paramToState=value=>value ? value: defaultValue, stateToParam=value=>value ? value.toString(): defaultValue) {\n  const [state, setState] = useState(defaultValue);\n  const location = useLocation();\n  const history = useHistory();\n\n  React.useEffect(() => {\n    const search = new URLSearchParams(location.search);\n    if (search.has(name) && search.get(name) !== stateToParam(state)) {\n      setState(paramToState(search.get(name)));\n    } else if (!search.has(name) && stateToParam(state) !== stateToParam(defaultValue)) {\n      setState(defaultValue);\n    }\n  }, [name, defaultValue, paramToState, stateToParam, state, location, history]);\n\n  function setSearchParam(value, {push=true, skipURI=false} = {}) {\n    const search = new URLSearchParams(location.search);\n\n    search.set(name, value);\n    setState(value);\n    if (push) {\n      history.push(`${location.pathname}?${search.toString()}`);\n    } else {\n      history.replace(`${location.pathname}?${search.toString()}`);\n    }\n  }\n\n  return [state, setSearchParam];\n}","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  searchHit: {\n\n  },\n  ruleid: {\n  },\n  // languages: {\n  // },\n  language: {\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  }\n}));\n\nexport function SearchHit(props) {\n  const classes = useStyles();\n  const languages = props.data.languages.map(lang => (\n    <Chip\n      classes={{root: classes.language}}\n      label={lang}\n      color=\"primary\"\n    />\n  ));\n  const titles = props.data.titles.split('\\n').map(title => (\n    <Typography className={{root: classes.title}} variant=\"body1\" component=\"p\" gutterBottom>\n      {title}\n    </Typography>\n  ));\n  return (\n    <Link component={RouterLink} to={`/S${props.data.id}/${props.data.languages[0]}`}>\n    <Card variant=\"outlined\" classes={{root: classes.searchHit}}>\n      <CardContent>\n          <Typography classes={{root: classes.ruleid}} variant=\"h5\" component=\"h5\" gutterBottom>\n            Rule {props.data.id}\n          </Typography>\n          {titles}\n          <Typography variant=\"body2\" component=\"p\" classes={{root: classes.languages}}>\n            {languages}\n          </Typography>\n      </CardContent>\n    </Card>\n    </Link>\n  )\n}","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Box from '@material-ui/core/Box';\n\nimport useStyles from './SearchPage.style';\nimport { useSearch } from './utils/useSearch';\nimport {\n  useLocationSearch,\n  useLocationSearchState\n} from './utils/routing';\nimport { SearchHit } from './SearchHit';\n\nexport const SearchPage = () => {\n  const classes = useStyles();\n  \n  const pageSize = 20;\n  const [query, setQuery] = useLocationSearchState('query', '');\n\n  const [ruleType, setRuleType] = useLocationSearchState('types', 'ALL');\n  const allRuleTypes = {'BUG': 'Bug', 'CODE_SMELL': 'Code Smell', 'SECURITY_HOTSPOT': 'Security Hotspot', 'VULNERABILITY': 'Vulnerability'};\n\n  const [ruleTags, setRuleTags] = useLocationSearchState('tags', [], value => value ? value.split(',') : []);\n  const allRuleTags = [\"confusing\", 'pitfall', 'clumsy', 'junit', 'tests']; // TODO: generate this list\n\n  const [pageNumber, setPageNumber] = useLocationSearchState('page', 1, parseInt);\n  const [, setLocationSearch] = useLocationSearch();\n\n\n  const [results, numberOfHits, error, resultsAreLoading] = useSearch(query,\n    ruleType === \"ALL\" ? null : ruleType,\n    ruleTags,\n    pageSize, pageNumber);\n  const totalPages = Math.ceil(numberOfHits/pageSize);\n\n  let resultsDisplay=\"No rule found...\";\n  if (resultsAreLoading) {\n    resultsDisplay = \"Searching\";\n  }\n  else if (results.length > 0) {\n    resultsDisplay = results.map(result =>\n      <Box className={classes.searchHitBox}>\n        <SearchHit key={result.id} data={result}/>\n      </Box>\n    )\n  }\n\n  const paramSetters = {types: setRuleType, tags: setRuleTags, query: setQuery};\n  function handleUpdate(field) {\n    return function(event) {\n      if (pageNumber > 1) {\n        const uriSearch = {query: query, types: ruleType, tags: ruleTags, page: 1};\n        uriSearch[field] = event.target.value;\n        setLocationSearch(uriSearch);\n      } else {\n        paramSetters[field](event.target.value, {push: false});\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n    <div className={classes.searchBar}>\n    <Container maxWidth=\"md\">\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Search Rule Specifications</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n            id=\"title-query\"\n            label=\"Rule Title and Description\"\n            placeholder=\"Search in rule titles and descriptions\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            value={query}\n            onChange={handleUpdate(\"query\")}\n            error={error}\n            helperText={error}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <TextField\n          select\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Rule types\"\n          value={ruleType}\n          onChange={handleUpdate(\"types\")}\n        >\n          <MenuItem key=\"All\" value=\"ALL\">\n            All\n          </MenuItem>\n          {Object.keys(allRuleTypes).map((ruleType) => (\n            <MenuItem key={ruleType} value={ruleType}>\n              {allRuleTypes[ruleType]}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={9}>\n      <TextField\n          select\n          fullWidth\n          SelectProps={{\n            multiple: true,\n          }}\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Rule Tags\"\n          value={ruleTags}\n          onChange={handleUpdate(\"tags\")}\n          renderValue={(selected) => {\n            return selected.join(', ');\n          }}\n        >\n          {allRuleTags.map((ruleType) => (\n            <MenuItem key={ruleType} value={ruleType}>\n              {ruleType}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n    </Grid>\n    </Container>\n  </div>\n  <div className={classes.searchResults}>\n    <Container maxWidth=\"md\">\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Box className={classes.resultsCount}>\n            <Typography variant=\"subtitle1\">Number of rules found: {numberOfHits}</Typography>\n          </Box>\n            {resultsDisplay}\n          <Pagination count={totalPages} page={pageNumber} siblingCount={2}\n            onChange={(event, value) => setPageNumber(value)}\n            />\n        </Grid>\n      </Grid>\n    </Container>\n  </div>\n  </div>\n  )\n}","import React, { useState } from 'react';\n\nimport * as lunr from 'lunr'\n\nimport { useFetch } from './useFetch';\n\nexport function useSearch(query, ruleType, ruleTags, pageSize, pageNumber) {\n  let indexDataUrl = `${process.env.PUBLIC_URL}/rules/rule-index.json`;\n  let storeDataUrl = `${process.env.PUBLIC_URL}/rules/rule-index-store.json`;\n\n  const [indexData, indexDataError, indexDataIsLoading] = useFetch(indexDataUrl);\n  const [storeData, storeDataError, storeDataIsLoading] = useFetch(storeDataUrl);\n  const [index, setIndex] = useState(null);\n\n  const [results, setResults] = useState([]);\n  const [numberOfHits, setNumberOfHits] = useState(null);\n  const [error, setError] = useState(null);\n  const [resultsAreloading, setResultsAreLoading] = useState(true);\n\n  React.useEffect(() => {\n    console.log(`trying to load index`);\n    if (!indexDataIsLoading && !indexDataError) {\n      console.log(\"Loading Index\");\n      setIndex(lunr.Index.load(indexData));\n    }\n  }, [indexData, indexDataError, indexDataIsLoading]);\n\n  React.useEffect(() => {\n    console.log(`trying to run query`);\n    if (index != null && !storeDataIsLoading && !storeDataError) {\n      let hits = []\n      setError(null);\n      try {\n        // We use index.query instead if index.search in order to fully\n        // control how each filter is added and how the query is processed.\n        hits = index.query(q => {\n          // Add rule type filter\n          if (ruleType) {\n            q.term(ruleType.toLowerCase(), {\n              fields: ['type'],\n              presence: lunr.Query.presence.REQUIRED,\n              usePipeline: false\n            });\n          }\n\n          // Add rule tags filter\n          ruleTags.forEach(ruleTag => {\n            q.term(ruleTag, {\n              fields: ['tags'],\n              presence: lunr.Query.presence.REQUIRED,\n              usePipeline: false\n            });\n          });\n\n          // Search for each query token in titles and descriptions\n          lunr.tokenizer(query).forEach(token => {\n            q.term(token, {fields: ['titles', 'descriptions'], presence: lunr.Query.presence.REQUIRED})\n          })\n          \n        });\n      } catch (exception) {\n        if (exception instanceof lunr.QueryParseError) {\n          setError(exception.message);\n        } else {\n          throw exception;\n        }\n      }\n      setNumberOfHits(hits.length)\n      const pageResults = hits.slice(pageSize*(pageNumber - 1), pageSize*(pageNumber));\n      setResults(pageResults.map(({ ref }) => storeData[ref]));\n      setResultsAreLoading(false);\n    }\n  }, [query, ruleType, ruleTags, pageSize, pageNumber, storeData, storeDataIsLoading, storeDataError, index]);\n\n  return [results, numberOfHits, error, resultsAreloading];\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: '13px', // Quickfix. For some reason the topbar overlaps on the content.\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport useStyles from './TopBar.style';\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            SonarSource Rule Specifications\n          </Typography>\n        </Toolbar>\n      </AppBar>\n  );\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Box } from '@material-ui/core';\nimport useStyles from './App.style';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {RulePage} from \"./RulePage\";\nimport {SearchPage} from \"./SearchPage\";\nimport TopBar from \"./TopBar\";\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <CssBaseline>\n    <div className={classes.root}>\n      <TopBar/>\n      <Box>\n        <Router basename=\"/rspec\">\n          <Switch>\n            <Route path=\"/:ruleid/:language\" component={RulePage} />\n            <Route>\n              <SearchPage/>\n            </Route>\n          </Switch>\n        </Router>\n      </Box>\n    </div>\n    </CssBaseline>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}